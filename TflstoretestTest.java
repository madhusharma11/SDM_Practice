// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class TflstoretestTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void tflstoretest() {
    // Test name: tflstore_test
    // Step # | name | target | value
    // 1 | open | / | 
    driver.get("http://65.0.26.194:8000/");
    // 2 | setWindowSize | 974x1032 | 
    driver.manage().window().setSize(new Dimension(974, 1032));
    // 3 | click | linkText=Gallery | 
    driver.findElement(By.linkText("Gallery")).click();
    // 4 | click | id=1 | 
    driver.findElement(By.id("1")).click();
    // 5 | click | css=body | 
    driver.findElement(By.cssSelector("body")).click();
    // 6 | click | css=button | 
    driver.findElement(By.cssSelector("button")).click();
    // 7 | click | id=txtquantity | 
    driver.findElement(By.id("txtquantity")).click();
    // 8 | type | id=txtquantity | 50
    driver.findElement(By.id("txtquantity")).sendKeys("50");
    // 9 | click | css=td:nth-child(1) > input | 
    driver.findElement(By.cssSelector("td:nth-child(1) > input")).click();
    // 10 | click | css=tr:nth-child(3) > td:nth-child(2) > input | 
    driver.findElement(By.cssSelector("tr:nth-child(3) > td:nth-child(2) > input")).click();
    // 11 | click | css=tr:nth-child(3) > td:nth-child(2) > input | 
    driver.findElement(By.cssSelector("tr:nth-child(3) > td:nth-child(2) > input")).click();
    // 12 | click | css=td:nth-child(3) > input | 
    driver.findElement(By.cssSelector("td:nth-child(3) > input")).click();
    // 13 | click | id=5 | 
    driver.findElement(By.id("5")).click();
    // 14 | click | css=button | 
    driver.findElement(By.cssSelector("button")).click();
    // 15 | click | id=txtquantity | 
    driver.findElement(By.id("txtquantity")).click();
    // 16 | type | id=txtquantity | 50
    driver.findElement(By.id("txtquantity")).sendKeys("50");
    // 17 | click | css=td:nth-child(1) > input | 
    driver.findElement(By.cssSelector("td:nth-child(1) > input")).click();
    // 18 | click | css=tr:nth-child(3) > td:nth-child(2) > input | 
    driver.findElement(By.cssSelector("tr:nth-child(3) > td:nth-child(2) > input")).click();
  }
}
